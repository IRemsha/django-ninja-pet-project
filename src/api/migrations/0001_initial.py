# Generated by Django 3.0.8 on 2020-08-01 17:18

import api.models
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_better_admin_arrayfield.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Зарплата за 160 часов')),
                ('currency', models.CharField(choices=[('RUB', 'Рубли'), ('USD', 'Доллары'), ('EUR', 'Евро')], default='RUB', max_length=255, verbose_name='Валюта')),
                ('patronymic_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телефон')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('telegram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram')),
                ('skype', models.CharField(blank=True, max_length=255, null=True, verbose_name='Skype')),
                ('passport_rf_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='Паспорт РФ №')),
                ('passport_international_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='Загран №')),
                ('passport_international_due_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Загран Дата окончания срока действия')),
                ('facebook', models.CharField(blank=True, max_length=255, null=True, verbose_name='Facebook')),
                ('vkontakte', models.CharField(blank=True, max_length=255, null=True, verbose_name='VKontakte')),
                ('instagram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Instagram')),
                ('toggl_email', models.CharField(blank=True, help_text='Можно посмотреть <b>YOUR EMAIL в начале страницы</b> <a href="https://toggl.com/app/profile" target="_blank">здесь</a>.', max_length=255, null=True)),
                ('toggl_workspace_id', models.CharField(blank=True, help_text='Можно посмотреть <b>id в строке браузера</b> <a href="https://toggl.com/app/settings/general" target="_blank">здесь</a>.', max_length=255, null=True)),
                ('toggl_token', models.CharField(blank=True, help_text='Можно посмотреть <b>API Token в конце страницы</b> <a href="https://toggl.com/app/profile" target="_blank">здесь</a>.', max_length=255, null=True)),
                ('hire_date', models.DateField(default=datetime.datetime.now, verbose_name='Когда нанят')),
                ('fire_date', models.DateField(blank=True, null=True, verbose_name='Когда уволен')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес (офиса)')),
                ('site', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сайт')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Сумма')),
                ('currency', models.CharField(choices=[('RUB', 'Рубли'), ('USD', 'Доллары'), ('EUR', 'Евро')], max_length=255, verbose_name='Валюта')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Дата')),
                ('status', models.CharField(choices=[('REQUESTED', 'Запрошено'), ('PAID', 'Оплачено')], default='PAID', max_length=255, verbose_name='Статус')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Расход',
                'verbose_name_plural': 'Расходы',
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Сумма')),
                ('currency', models.CharField(choices=[('RUB', 'Рубли'), ('USD', 'Доллары'), ('EUR', 'Евро')], max_length=255, verbose_name='Валюта')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Доход',
                'verbose_name_plural': 'Доходы',
            },
        ),
        migrations.CreateModel(
            name='IncomeSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ENTREPRENEUR', 'ИП'), ('CARD', 'Банковская карта'), ('PAYONEER', 'Payoneer'), ('PAYPAL', 'PayPal'), ('CASH', 'Cash'), ('OTHER', 'Other')], max_length=255, verbose_name='Тип')),
                ('currency', models.CharField(choices=[('RUB', 'Рубли'), ('USD', 'Доллары'), ('EUR', 'Евро')], default='RUB', max_length=255, verbose_name='Валюта')),
                ('bank', models.TextField(blank=True, null=True, verbose_name='банк')),
                ('card_number', models.TextField(blank=True, null=True, verbose_name='номер карты')),
                ('account_number', models.TextField(blank=True, null=True, verbose_name='номер счета')),
                ('bic', models.TextField(blank=True, null=True, verbose_name='БИК')),
                ('entity_name', models.TextField(blank=True, null=True, verbose_name='название юр. лица')),
            ],
            options={
                'verbose_name': 'Источник дохода',
                'verbose_name_plural': 'Источники доходов',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Ключ')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('trackers', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None, verbose_name='Ссылки на трекеры')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='api.Client', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True, verbose_name='Ключ')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус проекта',
                'verbose_name_plural': 'Статусы проектов',
            },
        ),
        migrations.CreateModel(
            name='InvestmentIncome',
            fields=[
                ('income_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Income')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Доход от инвестиций',
                'verbose_name_plural': 'Доходы от инвестиций',
            },
            bases=('api.income',),
        ),
        migrations.CreateModel(
            name='TaxExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('category', models.CharField(choices=[('TAX', 'Налог'), ('PAYONEER', 'Payoneer'), ('OTHER', 'Другое')], max_length=255, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Расход на налоги',
                'verbose_name_plural': 'Расходы на налоги',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='WinIncome',
            fields=[
                ('income_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Income')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Доход от выигрыша',
                'verbose_name_plural': 'Доходы от выигрышей',
            },
            bases=('api.income',),
        ),
        migrations.CreateModel(
            name='TogglRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=255, verbose_name='Месяц')),
                ('year', models.CharField(max_length=255, verbose_name='Год')),
                ('seconds', models.IntegerField(verbose_name='Секунды')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='toggl_records', to='api.Project')),
            ],
            options={
                'verbose_name': 'Toggl',
                'verbose_name_plural': 'Toggl',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='api.ProjectStatus', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='income',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to='api.IncomeSource', verbose_name='Источник'),
        ),
        migrations.CreateModel(
            name='EmployeePaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ENTREPRENEUR', 'ИП'), ('CARD', 'Банковская карта'), ('PAYONEER', 'Payoneer'), ('PAYPAL', 'PayPal'), ('CASH', 'Cash'), ('OTHER', 'Other')], max_length=255, verbose_name='Тип')),
                ('currency', models.CharField(choices=[('RUB', 'Рубли'), ('USD', 'Доллары'), ('EUR', 'Евро')], default='RUB', max_length=255, verbose_name='Валюта')),
                ('bank', models.TextField(blank=True, null=True, verbose_name='банк')),
                ('card_number', models.TextField(blank=True, null=True, verbose_name='номер карты')),
                ('account_number', models.TextField(blank=True, null=True, verbose_name='номер счета')),
                ('bic', models.TextField(blank=True, null=True, verbose_name='БИК')),
                ('entity_name', models.TextField(blank=True, null=True, verbose_name='название юр. лица')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Способ оплаты сотрудника',
                'verbose_name_plural': 'Способы оплаты сотрудника',
            },
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телефон')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('telegram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram')),
                ('facebook', models.CharField(blank=True, max_length=255, null=True, verbose_name='Facebook')),
                ('vkontakte', models.CharField(blank=True, max_length=255, null=True, verbose_name='VKontakte')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='api.Client', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Контактное лицо',
                'verbose_name_plural': 'Контактные лица',
            },
        ),
        migrations.CreateModel(
            name='VacationExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('since', models.DateField(blank=True, null=True, verbose_name='Начало периода')),
                ('until', models.DateField(blank=True, null=True, verbose_name='Конец периода')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Отпуск',
                'verbose_name_plural': 'Отпуск',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='SoftwareExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Расход на ПО',
                'verbose_name_plural': 'Расходы на ПО',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='SickLeaveExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('since', models.DateField(blank=True, null=True, verbose_name='Начало периода')),
                ('until', models.DateField(blank=True, null=True, verbose_name='Конец периода')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Больничные',
                'verbose_name_plural': 'Больничные',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='SalaryExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь')], default=api.pkg.date.get_salary_target_month, max_length=255, verbose_name='Месяц')),
                ('year', models.CharField(default=api.pkg.date.get_salary_target_year, max_length=255, verbose_name='Год')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Заработная плата',
                'verbose_name_plural': 'Заработная плата',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='OtherExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Прочие расходы',
                'verbose_name_plural': 'Прочие расходы',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='EducationExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Расход на обучение / конференции',
                'verbose_name_plural': 'Расходы на обучение / конференции',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='CorporateExpense',
            fields=[
                ('expense_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Expense')),
                ('category', models.CharField(choices=[('OFFICE', 'Траты на офис'), ('HARDWARE', 'Техника'), ('CONTEST', 'Конкурсы'), ('HACKATHON', 'Хакатоны'), ('ENTERTAINMENT', 'Развлечения'), ('OTHER', 'Другое')], max_length=255, verbose_name='Категория')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporate_expenses', to=settings.AUTH_USER_MODEL)),
                ('employee_payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmployeePaymentMethod')),
            ],
            options={
                'verbose_name': 'Корпоративный расход',
                'verbose_name_plural': 'Корпоративные расходы',
            },
            bases=('api.expense',),
        ),
        migrations.CreateModel(
            name='ClientIncome',
            fields=[
                ('income_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Income')),
                ('description', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to='api.Client')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to='api.Project')),
            ],
            options={
                'verbose_name': 'Доход от клиента',
                'verbose_name_plural': 'Доходы от клиентов',
            },
            bases=('api.income',),
        ),
    ]
